version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    command: >
      sh -c "python manage.py migrate &&
             gunicorn core.wsgi --bind 0.0.0.0:8000"

    restart: always
    volumes:
      - ./core:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - "8000"

    environment:
      - SECRET_KEY=django-insecure-=#3%8gam+z%r%rxz%#xfi!yk$u_uklcui+^-()58%@s9zrxju3
      - DEBUG=True
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - redis
      - db

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  worker:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - redis
      - backend
      
  beat:
    build: .
    command: celery -A core beat --loglevel=info
    volumes:
      - ./core:/app
    depends_on:
      - worker
  
  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    # networks:
    #   - web_network


  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - redis
      - backend
    

volumes:
  static_volume:
  media_volume:
  postgres_data:


